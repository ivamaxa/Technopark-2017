package Anagram;
# vim: noet:

use 5.016;
use warnings;


use utf8;
use open qw(:std :utf8);
#use List::Util qw(uniq);

=encoding UTF8

=head1 SYNOPSIS

Поиск анаграмм

=head1 anagram($arrayref)

Функция поиска всех множеств анаграмм по словарю.

Входные данные для функции: ссылка на массив - каждый элемент которого - слово на русском языке в кодировке utf8

Выходные данные: Ссылка на хеш множеств анаграмм.

Ключ - первое встретившееся в словаре слово из множества
Значение - ссылка на массив, каждый элемент которого слово из множества, в том порядке в котором оно встретилось в словаре в первый раз.

Множества из одного элемента не должны попасть в результат.

Все слова должны быть приведены к нижнему регистру.
В результирующем множестве каждое слово должно встречаться только один раз.
Например

anagram(['пятак', 'ЛиСток', 'пятка', 'стул', 'ПяТаК', 'слиток', 'тяпка', 'столик', 'слиток'])

должен вернуть ссылку на хеш


{
	'пятак'  => ['пятак', 'пятка', 'тяпка'],
	'листок' => ['листок', 'слиток', 'столик'],
}

=cut

##
sub unique {
	my %hash;
	grep !$hash{$_}++, @_;

}
##
sub anagram {
	my $word=shift;
	my %result; 
	my @result;
	my %hash;
	foreach(@$word) {
		my @mas = split(//, lc $_);
		@mas = sort{$a cmp $b} @mas;
		my $mas = join('', @mas);
		push @{$hash{$mas}}, lc $_ 	;	
	}
	foreach (keys %hash) {
		my @uni = unique @{$hash{$_}};
		@{$hash{$_}} = sort {$a cmp $b} @uni;
		
	}
		
	my @mas = grep {$#{$hash{$_}}>0} keys %hash;
	%result = map {shift @{$hash{$_}} => $hash{$_}} @mas;
	



	return \%result;
	

	

}


1;
